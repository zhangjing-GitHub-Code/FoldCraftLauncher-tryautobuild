name: Android CI

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
      - 'main'
    # 在push tag时触发
    tags:
      - '*'
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Setup timezone
      # You may pin to the exact commit or the version.
      # uses: zcong1993/setup-timezone@7215c3ec086d387e4618c4b81482d06d998c90a9
      uses: zcong1993/setup-timezone@v1.1.2
      with:
        # which timezone you want to use
        timezone: Asia/Shanghai # default is UTC
    - name: F**k you bad packet header
      run: |
        git config --global pack.windowMemory "1001m"
        git config --global pack.packSizeLimit "1001m"
        git config --global pack.threads "1"
        git config --global pack.deltaCacheSize "512m"
    - name: Checkout
      uses: actions/checkout@v2
    - name: fuck at JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle
    - name: Checkout Android Keystore
      uses: actions/checkout@v2
      with:
        repository: zhangjing-GitHub-Code/jks-props
        token: ${{ secrets.KS_REPO_PAT }} # 连接仓库的token,需要单独配置
        path: keystore # 仓库的根目录名
    - name: set symlink
      run: |
        #mkdir -p /opt/hostedtoolcache/gradle/7.4/x64/bin/
        mkdir ./tbin
        ln -s gradlew tbin/gradle
        #chmod +x -w /opt/hostedtoolcache/gradle/7.4/x64/bin/gradle
        export PATH=$(pwd)/tbin:$PATH
    #- uses: actions/cache@v2
    #  with:
    #    path: |
    #      ~/.gradle/caches
    #      ~/.gradle/wrapper
    #      !~/.gradle/caches/build-cache-*
    #    key: gradle-deps-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
    #    restore-keys: gradle-deps
    # well this embedded build
    - uses: burrunan/gradle-cache-action@v1
      name: Gradle build with better cache
      # Extra environment variables for Gradle execution (regular GitHub Actions feature)
      # Note: env must be outside of "with"
      env:
        VARIABLE: VALUE
      with:
        # If you have multiple jobs, use distinct job-id in in case you want to split caches
        # For instance, jobs with different JDK versions can't share caches
        # RUNNER_OS is added to job-id automatically
        job-id: jdk11
        # Specifies arguments for Gradle execution
        # If arguments is missing or empty, then Gradle is not executed
        arguments: build
        # arguments can be multi-line for better readability
        # arguments: |
        #  --no-paralell
        #  build
        #  -x test
        # Gradle version to use for execution:
        #   wrapper (default), current, rc, nightly, release-nightly, or
        #   versions like 6.6 (see https://services.gradle.org/versions/all)
        gradle-version: wrapper
        # Properties are passed as -Pname=value
        properties: |
          kotlin.js.compiler=ir
          kotlin.parallel.tasks.in.project=true
    #- name: Fuck execute permission for gradlew
      #run: chmod +x gradlew
    #- name: Build♂with♂Gradle
      #run: cd FCL&&../gradlew build
    #step：上传apk 到action，在右上角查看
    # 官方文档 https://help.github.com/cn/actions/automating-your-workflow-with-github-actions/persisting-workflow-data-using-artifacts#uploading-build-and-test-artifactst
    - name: Fuck↑ APK to artifacts
      uses: actions/upload-artifact@v3
      with:
        name: FCL-release-selfsigned.apk
        path: FCL/build/outputs/apk/release/FCLauncher-release.apk
        asset_content_type: application/apk
    - name: run find in FCL
      run: |
        find . -name "*release*apk*" -type f
        if [ "$?" != "0" ];then tree .;fi;
